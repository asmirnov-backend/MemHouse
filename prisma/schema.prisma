generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Mem {
  id            String        @id @default(uuid()) @db.Uuid
  imgUrls       String[]
  text          String?       @db.VarChar(1024)
  tags          String[]
  likes         Int           @default(0)
  dislikes      Int           @default(0)
  rating        Float
  createdUser   User          @relation(name: "create", fields: [createdUserId], references: [id])
  createdUserId String        @db.Uuid
  viewedUsers   User[]
  reactions     MemReaction[]
}

model MemReaction {
  id     String          @id @default(uuid()) @db.Uuid
  mem    Mem             @relation(fields: [memId], references: [id])
  memId  String          @db.Uuid
  type   MemReactionType
  user   User            @relation(fields: [userId], references: [id])
  userId String          @db.Uuid
}

enum MemReactionType {
  LIKE
  DISLIKE
}

model User {
  id          String        @id @default(uuid()) @db.Uuid
  email       String        @unique @db.VarChar(128)
  password    String
  nickname    String        @unique @db.VarChar(64)
  createdMems Mem[]         @relation(name: "create")
  viewedMemes Mem[]
  wallet      Wallet[]
  profile     Profile?
  reactions   MemReaction[]
}

model Profile {
  id       String    @id @default(uuid()) @db.Uuid
  name     String    @db.VarChar(128)
  surname  String    @db.VarChar(128)
  birthday DateTime? @db.Date
  user     User      @relation(fields: [userId], references: [id])
  userId   String    @unique @db.Uuid
}

model Wallet {
  id      String @id @default(uuid()) @db.Uuid
  balance Float  @default(0)
  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String @db.Uuid
}
