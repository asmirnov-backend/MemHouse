# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Mem {
  id: ID!
  imgUrls: [String!]
  text: String
  tags: [String!]
  likes: Int!
  dislikes: Int!
  rating: Float!
}

type User {
  id: ID!
  email: String!
  nickname: String!
  money: Float!
}

type Query {
  mems(where: MemWhereInput, orderBy: [MemOrderByWithRelationInput!], cursor: MemWhereUniqueInput, take: Int, skip: Int, distinct: [MemScalarFieldEnum!]): [Mem!]!
  user(where: UserWhereUniqueInput!): User!
}

input MemWhereInput {
  AND: [MemWhereInput!]
  OR: [MemWhereInput!]
  NOT: [MemWhereInput!]
  id: StringFilter
  imgUrls: StringNullableListFilter
  text: StringNullableFilter
  tags: StringNullableListFilter
  likes: IntFilter
  dislikes: IntFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringFilter
}

enum QueryMode {
  default
  insensitive
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input StringNullableListFilter {
  equals: [String!]
  has: String
  hasEvery: [String!]
  hasSome: [String!]
  isEmpty: Boolean
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringNullableFilter
}

input NestedStringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input NestedIntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input MemOrderByWithRelationInput {
  id: SortOrder
  imgUrls: SortOrder
  text: SortOrder
  tags: SortOrder
  likes: SortOrder
  dislikes: SortOrder
}

enum SortOrder {
  asc
  desc
}

input MemWhereUniqueInput {
  id: String
}

enum MemScalarFieldEnum {
  id
  imgUrls
  text
  tags
  likes
  dislikes
  rating
}

input UserWhereUniqueInput {
  email: String
  nickname: String
}

type Mutation {
  updateMem(data: MemUpdateInput!, where: MemWhereUniqueInput!): Mem!
  createMem(data: MemCreateInput!): Mem!
  createUser(data: UserCreateInput!): User!
}

input MemUpdateInput {
  id: StringFieldUpdateOperationsInput
  imgUrls: MemUpdateimgUrlsInput
  text: NullableStringFieldUpdateOperationsInput
  tags: MemUpdatetagsInput
  likes: IntFieldUpdateOperationsInput
  dislikes: IntFieldUpdateOperationsInput
}

input StringFieldUpdateOperationsInput {
  set: String
}

input MemUpdateimgUrlsInput {
  set: [String!]
  push: [String!]
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

input MemUpdatetagsInput {
  set: [String!]
  push: [String!]
}

input IntFieldUpdateOperationsInput {
  set: Int
  increment: Int
  decrement: Int
  multiply: Int
  divide: Int
}

input MemCreateInput {
  id: String
  imgUrls: MemCreateimgUrlsInput
  text: String
  tags: MemCreatetagsInput
  likes: Int
  dislikes: Int
}

input MemCreateimgUrlsInput {
  set: [String!]!
}

input MemCreatetagsInput {
  set: [String!]!
}

input UserCreateInput {
  email: String!
  password: String!
  nickname: String!
}